{"mappings":"YAAA,IAKIA,EACAC,EANEC,EAAaC,SAASC,cAAc,uBACpCC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAMtC,SAASG,EAAcC,EAAUC,GAE/B,KAAIC,OAAOJ,EAAOK,OAASH,GAA3B,CAGA,IAAMI,EAAY,CAChBJ,SAAUA,EACVC,MAAOA,GAEHI,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,GAAQ,WACN,OAAOL,C,IAGTM,GAAO,WACL,OAAON,C,MAGVH,E,IAIFW,MAAK,SAAAR,GACJS,QAAQC,IAAI,qBAAoCC,OAAff,EAAS,QAAYe,OAANd,EAAM,OAEtDR,EAAkBO,EAAW,EAC7BR,EAAeS,EAAQC,OAAOL,EAAKM,OACnCJ,EAAcN,EAAiBD,E,IAGhCwB,OAAM,SAAAZ,GACLS,QAAQC,IAAI,oBAAmCC,OAAff,EAAS,QAAYe,OAANd,EAAM,OAErDR,EAAkBO,EAAW,EAC7BR,EAAeS,EAAQC,OAAOL,EAAKM,OACnCJ,EAAcN,EAAiBD,E,GApCjC,C,CARQG,SAASC,cAAc,uBAwD/BqB,iBAAiB,SAPrB,SAA4BC,GAC1BA,EAAEC,iBACF3B,EAAeU,OAAOR,EAAWS,OAEjCJ,EADAN,EAAkB,EACaD,E","sources":["src/js/03-promises.js"],"sourcesContent":["const firstDelay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst btn = document.querySelector('button[type=\"submit');\n\nlet delayCounter;\nlet positionCounter;\n\nfunction createPromise(position, delay) {\n  //  Loop break by amount  //\n  if (Number(amount.value) < position) {\n    return;\n  }\n  const promisObj = {\n    position: position,\n    delay: delay,\n  };\n  const shouldResolve = Math.random() > 0.3;\n  //  Promise  //\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(() => {\n          return promisObj;\n        });\n      } else {\n        reject(() => {\n          return promisObj;\n        });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(promisObj => {\n      console.log(`Fulfilled promise ${position} in ${delay}ms`);\n      // Premaring next iteration  //\n      positionCounter = position + 1;\n      delayCounter = delay + Number(step.value);\n      createPromise(positionCounter, delayCounter);\n      return;\n    })\n    .catch(promisObj => {\n      console.log(`Rejected promise ${position} in ${delay}ms`);\n      // Premaring next iteration  //\n      positionCounter = position + 1;\n      delayCounter = delay + Number(step.value);\n      createPromise(positionCounter, delayCounter);\n      return;\n    });\n}\n\nfunction massPromiseCreator(e) {\n  e.preventDefault();\n  delayCounter = Number(firstDelay.value);\n  positionCounter = 1;\n  createPromise(positionCounter, delayCounter);\n}\n\nbtn.addEventListener('click', massPromiseCreator);\n"],"names":["$ce04d3a99e08e73b$var$delayCounter","$ce04d3a99e08e73b$var$positionCounter","$ce04d3a99e08e73b$var$firstDelay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay","Number","value","promisObj","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","console","log","concat","catch","addEventListener","e","preventDefault"],"version":3,"file":"03-promises.97318f73.js.map"}